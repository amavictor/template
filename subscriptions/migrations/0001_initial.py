# Generated by Django 5.2.6 on 2025-09-04 21:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnvironmentalDataPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buoy_id', models.CharField(max_length=50)),
                ('metric_type', models.CharField(choices=[('salinity', 'Salinity (ppm)'), ('ph', 'pH Level'), ('temperature', 'Temperature (°C)'), ('dissolved_oxygen', 'Dissolved Oxygen (mg/L)'), ('turbidity', 'Turbidity (NTU)'), ('conductivity', 'Conductivity (µS/cm)'), ('nitrates', 'Nitrates (mg/L)'), ('phosphates', 'Phosphates (mg/L)'), ('chlorophyll', 'Chlorophyll-a (µg/L)')], max_length=30)),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('quality_score', models.FloatField(blank=True, help_text='Data quality score from 0.0 to 1.0', null=True)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('recorded_at', models.DateTimeField(help_text='When the data was recorded by the buoy')),
                ('received_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Environmental Data Point',
                'verbose_name_plural': 'Environmental Data Points',
                'db_table': 'subscriptions_environmentaldatapoint',
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['buoy_id', 'metric_type', 'recorded_at'], name='subscriptio_buoy_id_0b889d_idx'), models.Index(fields=['recorded_at'], name='subscriptio_recorde_50bbcc_idx'), models.Index(fields=['latitude', 'longitude'], name='subscriptio_latitud_3b044a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subscription_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('past_due', 'Past Due')], default='active', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, help_text='Subscription price at time of purchase', max_digits=10)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='monthly', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('api_calls_this_month', models.IntegerField(default=0)),
                ('api_calls_total', models.IntegerField(default=0)),
                ('last_api_call', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('order_item', models.ForeignKey(blank=True, help_text='The order item that created this subscription', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='orders.orderitem')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'db_table': 'subscriptions_subscription',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=255)),
                ('method', models.CharField(max_length=10)),
                ('response_code', models.IntegerField()),
                ('request_timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('bytes_transferred', models.IntegerField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'API Usage Log',
                'verbose_name_plural': 'API Usage Logs',
                'db_table': 'subscriptions_apiusagelog',
                'ordering': ['-request_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('paid', 'Paid'), ('past_due', 'Past Due'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateTimeField()),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=255)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255)),
                ('api_calls_used', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='subscriptions.subscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription Invoice',
                'verbose_name_plural': 'Subscription Invoices',
                'db_table': 'subscriptions_subscriptioninvoice',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('past_due', 'Past Due')], max_length=20)),
                ('reason', models.CharField(blank=True, help_text='Reason for status change', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'Subscription Status History',
                'verbose_name_plural': 'Subscription Status Histories',
                'db_table': 'subscriptions_subscriptionstatushistory',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved')], default='active', max_length=20)),
                ('threshold_value', models.FloatField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, help_text='e.g., "greater_than", "less_than", "equals"', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('data_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='subscriptions.environmentaldatapoint')),
            ],
            options={
                'verbose_name': 'Data Alert',
                'verbose_name_plural': 'Data Alerts',
                'db_table': 'subscriptions_dataalert',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'severity'], name='subscriptio_status_91abee_idx'), models.Index(fields=['data_point'], name='subscriptio_data_po_ee89cd_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user', 'status'], name='subscriptio_user_id_2a19e8_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['subscription_number'], name='subscriptio_subscri_c33376_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['next_billing_date'], name='subscriptio_next_bi_0e9626_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['stripe_subscription_id'], name='subscriptio_stripe__12aa53_idx'),
        ),
        migrations.AddIndex(
            model_name='apiusagelog',
            index=models.Index(fields=['subscription', 'request_timestamp'], name='subscriptio_subscri_354518_idx'),
        ),
        migrations.AddIndex(
            model_name='apiusagelog',
            index=models.Index(fields=['endpoint'], name='subscriptio_endpoin_3740df_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriptioninvoice',
            index=models.Index(fields=['subscription', 'status'], name='subscriptio_subscri_57ea27_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriptioninvoice',
            index=models.Index(fields=['invoice_number'], name='subscriptio_invoice_b19cba_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriptioninvoice',
            index=models.Index(fields=['due_date'], name='subscriptio_due_dat_241118_idx'),
        ),
    ]
